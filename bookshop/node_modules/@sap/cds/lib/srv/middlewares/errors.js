const production = process.env.NODE_ENV === 'production'
const cds = require ('../..'), LOG = cds.log('error')

module.exports = () => {
  return function http_error (error, req, res, _next) { // eslint-disable-line no-unused-vars

    // In case of 401 require login if available by auth strategy
    if (typeof error === 'number') error = { code: error }
    if (error.code == 401 && req._login) return req._login()

    // Prepare and log the error object
    const status = error.statusCode || error.status || Number(error.code) || 500
    delete error.statusCode
    delete error.status
    if (!production && error.stack) error.stack = error.stack.replace(/\n {4}at .*(?:node_modules\/express|node:internal).*/g,'')

    if (400 <= status && status < 500) {
      LOG.warn (status, '>', error)
    } else {
      LOG.error (status, '>', error)
    }

    // Expose as little information as possible in production, and as much as possible in development
    if (production) {
      Object.defineProperties (error, {
        message: { enumerable: true },
        user: { enumerable: false },
      })
    } else {
      Object.defineProperties (error, {
        message: { enumerable: true },
        stack: { enumerable: true },
      })
    }

    // Send the error response
    return res.status(status).json({error})

    // Note: express returns errors as XML, we prefer JSON
    // _next (error)
  }
}
