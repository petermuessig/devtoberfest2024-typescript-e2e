const cds = require('../../../lib')
const driver = require('./driver')
const isHdb = driver?.name === 'hdb'

const convertToBoolean = boolean => {
  if (boolean === null) {
    return null
  }

  return Boolean(boolean)
}

const convertInt64ToString = int64 => {
  if (int64 === null) {
    return null
  }

  return String(int64)
}

const convertToISO = element => {
  if (!element) return null

  let dateTime = element.replace(' ', 'T')
  if (cds.env.features.precise_timestamps) {
    dateTime = dateTime.slice(0, 19)
    let millis = element.slice(20)
    if (millis.at(-1) === 'Z') millis = millis.slice(0, -1)
    millis = millis.slice(0, 7).padEnd(7, '0')
    return dateTime + '.' + millis + 'Z'
  }

  return new Date(dateTime + 'Z').toISOString()
}

const convertToISONoMillis = element => {
  if (element) {
    const dateTime = new Date(element + 'Z').toISOString()
    return dateTime.slice(0, 19) + dateTime.slice(23)
  }

  return null
}

const convertToString = element => {
  if (element) {
    if (element instanceof Buffer) {
      if (isHdb && driver.iconv) {
        return driver.iconv.decode(element, 'cesu8')
      }

      return Buffer.from(element, 'base64').toString()
    }

    return element
  }

  return null
}

const HANA_TYPE_CONVERSION_MAP = new Map([
  ['cds.Boolean', convertToBoolean],
  ['cds.Integer64', convertInt64ToString],
  ['cds.Int64', convertInt64ToString],
  ['cds.DateTime', convertToISONoMillis],
  ['cds.Timestamp', convertToISO],
  ['cds.LargeString', convertToString],
  ['cds.hana.CLOB', convertToString]
])

module.exports = {
  HANA_TYPE_CONVERSION_MAP
}
