const cds = require('../../../../../lib')

function noah_handler(req) {
  if (!req.subject) return
  const root = this.model.definitions[req.subject.ref[0].id || req.subject.ref[0]]
  if (!root) return

  /*
   * For auto-exposed Compositions all direct CRUD requests are rejected in non-draft case.
   * For other auto-exposed entities in non-draft case only C_UD are rejected. Direct READ is allowed.
   * Draft case is an exception. Direct requests are allowed.
   */
  if (!root._isDraftEnabled && root['@cds.autoexposed']) {
    if (root['@cds.autoexpose']) {
      if (req.event === 'READ') return //> allow read for value help requests
      req.reject(405, 'ENTITY_IS_AUTOEXPOSE_READONLY', [root.name])
    }
    req.reject(405, 'ENTITY_IS_AUTOEXPOSED', [root.name])
  }
  const isAutoexposed = _isAutoexposed(req.target)
  if (isAutoexposed && req.event !== 'READ') {
    req.reject(405, 'ENTITY_IS_AUTOEXPOSE_READONLY', [req.target.name])
  }
}

const _isAutoexposed = entity => {
  if (!entity) return false
  return (entity['@cds.autoexpose'] && entity['@cds.autoexposed']) || entity.name.match(/\.DraftAdministrativeData$/)
}

// REVISIT: To be deleted after okra is removed
function okra_handler(req) {
  const isAutoexposed = _isAutoexposed(req.target)
  if (isAutoexposed && req.event !== 'READ') {
    req.reject(405, 'ENTITY_IS_AUTOEXPOSE_READONLY', [req.target.name])
  }
}

const handler = cds.env.features.odata_new_adapter ? noah_handler : okra_handler
handler._initial = true

module.exports = handler
