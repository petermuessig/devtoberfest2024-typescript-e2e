const cds = require('../../cds')

const { smartId } = cds.compiler.to.sql

let _dialect

const _isQuoted = s => s.match(/^".*"$/)
const _slugify = s => s.replace(/\./g, '_')
const _smartId = s => smartId(_slugify(s), _dialect || 'plain')

module.exports = {
  plain: s => {
    // set _dialect and _reserved once cds.db.kind is set
    if (!_dialect && cds.db && cds.db.kind) {
      _dialect = cds.db.options.dialect || cds.db.kind
    }

    if (typeof s !== 'string') throw new Error(`string expected but ${typeof s} received`)

    // * or already quoted?
    if (s === '*' || _isQuoted(s)) return s

    return _smartId(s)
  },
  quoted: s => `"${s}"`,
  bracketed: s => `[${s}]`,
  'all-upper': s => `"${_slugify(s.toUpperCase())}"`,
  'all-lower': s => `"${_slugify(s.toLowerCase())}"`
}
